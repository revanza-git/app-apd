{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\app-apd\\\\src\\\\Pages\\\\Dashboard\\\\index.js\";\nimport React, { Component } from \"react\";\nimport PolicyView from \"../Forms/PolicyDetailView\";\nimport CustomerView from \"../Forms/CustomerDetailView\";\nimport Sidebar from \"../../Components/Sidebar\";\nimport Navuser from \"../../Components/Navbar\";\nimport Footer from \"../../Components/Footer/footer.js\";\nimport Loader from \"../../Components/Loader\";\nimport { Tab, Row, Col, Container, Image } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Menu from \"../../../src/assets/images/simedis/Icon-menu.svg\";\nimport \"./index.scss\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      toggle: false\n    };\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    const updateAccountData = this.props.simedisAccountChange;\n    const updatePolicies = this.props.updatePolicies;\n    const updateRegistrationType = this.props.updateRegistrationType;\n    const updateformOne = this.props.formOne;\n    const loadHandler = this.props.updatePageLoad;\n    loadHandler(true);\n    this.processData(updateAccountData, loadHandler, updatePolicies, updateRegistrationType, updateformOne);\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  updateDimensions() {\n    this.setState({\n      width: window.innerWidth\n    });\n  }\n\n  async processData(updateAccountData, loadHandler, updatePolicies, updateRegistrationType, updateformOne) {\n    const res1 = await this.getCustomerPolicy(updateAccountData, loadHandler, updatePolicies, updateRegistrationType);\n    const res2 = await this.getCertificate(updateAccountData, loadHandler);\n    const res3 = await this.getCustomerDetail(loadHandler, updateformOne, updateAccountData);\n    const res4 = await this.getAccountPoint(updateAccountData, loadHandler);\n\n    if (res1 !== true && res2 !== true && res3 !== true && res4 !== true) {\n      this.failCase(updateAccountData, loadHandler);\n    } else {\n      loadHandler(false);\n    }\n\n    return true;\n  }\n\n  async getCustomerPolicy(updateAccountData, loadHandler, updatePolicies, updateRegistrationType) {\n    const accountData = this.props.states.simedis_account;\n\n    try {\n      const url = \"https://cors-anywhere.herokuapp.com/https://sit-eli.myequity.id/policy\";\n      const data = {\n        emailAddress: accountData.username // emailAddress: \"revanza-27@yopmail.com\",\n\n      };\n      const config = {\n        headers: {\n          Authorization: accountData.token\n        }\n      };\n      const res = await axios.post(url, data, config);\n      console.log(res);\n\n      if (!res.data.ok) {\n        this.failCase(updateAccountData, loadHandler);\n      }\n\n      const customerPolicy = res.data.data.customerPolicy;\n      const registrationType = res.data.data.registrationType;\n      updateAccountData(\"customer_code\", customerPolicy.customerCode);\n      updatePolicies(customerPolicy);\n      updateRegistrationType(registrationType);\n      return true;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getCertificate(updateAccountData, loadHandler) {\n    try {\n      const accountData = this.props.states.simedis_account;\n      const url = \"https://cors-anywhere.herokuapp.com/https://sit-eli.myequity.id/get-certificate\";\n      const data = {\n        customerCode: accountData.customer_code\n      };\n      const config = {\n        headers: {\n          Authorization: accountData.token\n        }\n      };\n      const res = await axios.post(url, data, config);\n      console.log(res);\n\n      if (!res.data.ok) {\n        this.failCase(updateAccountData, loadHandler);\n      }\n\n      updateAccountData(\"base64\", res.data.data.data.certificate);\n      return true;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getCustomerDetail(loadHandler, updateformOne, updateAccountData) {\n    try {\n      const accountData = this.props.states.simedis_account;\n      const url = \"https://cors-anywhere.herokuapp.com/https://sit-eli.myequity.id/customers/\" + accountData.customer_code;\n      const config = {\n        headers: {\n          Authorization: accountData.token\n        }\n      };\n      const res = await axios.get(url, config);\n\n      if (!res.data.ok) {\n        this.failCase(updateAccountData, loadHandler);\n      }\n\n      console.log(res);\n      const dataCustomer = await res.data.data;\n      updateformOne(\"first_name\", dataCustomer.customerName);\n      updateformOne(\"birth_date\", dataCustomer.dateOfBirth);\n      updateformOne(\"gender\", dataCustomer.genderCode);\n      updateformOne(\"email\", dataCustomer.emailAddress);\n      updateformOne(\"phone_number\", dataCustomer.phoneNo);\n      return true;\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n\n  async getAccountPoint(updateAccountData, loadHandler) {\n    try {\n      const accountData = this.props.states.simedis_account;\n      const data = {\n        emailAddress: accountData.username // emailAddress: \"revanza-27@yopmail.com\",\n\n      };\n      const url = \"https://cors-anywhere.herokuapp.com/https://sit-eli.myequity.id/account-point\";\n      const config = {\n        headers: {\n          Authorization: accountData.token\n        }\n      };\n      const res = await axios.post(url, data, config);\n      console.log(res);\n\n      if (!res.data.ok) {\n        this.failCase(updateAccountData, loadHandler);\n      }\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n\n  failCase(updateAccountData, loadHandler) {\n    loadHandler(false);\n    updateAccountData(\"is_valid\", false);\n    updateAccountData(\"form_status\", \"Mohon maaf koneksi mengalami kendala, silahkan coba lagi\");\n    this.props.history.push(\"/login\");\n  }\n\n  handleMenuClick() {\n    this.setState({\n      toggle: !this.state.toggle\n    });\n  }\n\n  handleLogout() {\n    this.props.history.push(\"/login\");\n  }\n\n  render() {\n    const {\n      states\n    } = this.props; // if (!states || states.is_loading === true) {\n    //   return (\n    //     <div className=\"main-dashboard-loading\">\n    //       <Container className=\"dashboard-loading-container-0\" fluid>\n    //         <Row>\n    //           <Loader />\n    //         </Row>\n    //       </Container>\n    //     </div>\n    //   );\n    // }\n\n    let toggled;\n    let mobileMenu;\n\n    if (this.state.width <= \"992\") {\n      mobileMenu = /*#__PURE__*/React.createElement(Container, {\n        className: \"dash-burger-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: e => this.handleMenuClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: Menu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      })));\n\n      if (this.state.toggle) {\n        toggled = \"toggled\";\n      } else {\n        toggled = \"not-toggled\";\n      }\n    } else {\n      mobileMenu = null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Container, {\n      defaultActiveKey: \"policy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      data: states.form_1,\n      width: this.state.width,\n      toggled: toggled,\n      handleExitSidebar: this.handleMenuClick,\n      handleLogout: this.handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      className: `dashboard-content ${toggled}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navuser, {\n      data: states.form_1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }), mobileMenu, /*#__PURE__*/React.createElement(Tab.Content, {\n      className: \"dashboard-tab-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Pane, {\n      className: \"dashboard-tab-pane\",\n      eventKey: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CustomerView, {\n      data: states.form_1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Tab.Pane, {\n      className: \"dashboard-tab-pane\",\n      eventKey: \"policy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PolicyView, {\n      data: states.policies,\n      reg: states.registration_type,\n      certificate: states.simedis_account.base64,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["D:/project/app-apd/src/Pages/Dashboard/index.js"],"names":["React","Component","PolicyView","CustomerView","Sidebar","Navuser","Footer","Loader","Tab","Row","Col","Container","Image","axios","Dashboard","constructor","props","state","width","window","innerWidth","toggle","handleMenuClick","bind","handleLogout","componentDidMount","console","log","updateAccountData","simedisAccountChange","updatePolicies","updateRegistrationType","updateformOne","formOne","loadHandler","updatePageLoad","processData","updateDimensions","addEventListener","setState","res1","getCustomerPolicy","res2","getCertificate","res3","getCustomerDetail","res4","getAccountPoint","failCase","accountData","states","simedis_account","url","data","emailAddress","username","config","headers","Authorization","token","res","post","ok","customerPolicy","registrationType","customerCode","err","customer_code","certificate","get","dataCustomer","customerName","dateOfBirth","genderCode","phoneNo","history","push","render","toggled","mobileMenu","e","Menu","form_1","policies","registration_type","base64"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PolicyView from \"../Forms/PolicyDetailView\";\r\nimport CustomerView from \"../Forms/CustomerDetailView\";\r\nimport Sidebar from \"../../Components/Sidebar\";\r\nimport Navuser from \"../../Components/Navbar\";\r\nimport Footer from \"../../Components/Footer/footer.js\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { Tab, Row, Col, Container, Image } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Menu from \"../../../src/assets/images/simedis/Icon-menu.svg\";\r\n\r\nimport \"./index.scss\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth,\r\n      toggle: false,\r\n    };\r\n\r\n    this.handleMenuClick = this.handleMenuClick.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    const updateAccountData = this.props.simedisAccountChange;\r\n    const updatePolicies = this.props.updatePolicies;\r\n    const updateRegistrationType = this.props.updateRegistrationType;\r\n    const updateformOne = this.props.formOne;\r\n    const loadHandler = this.props.updatePageLoad;\r\n\r\n    loadHandler(true);\r\n\r\n    this.processData(\r\n      updateAccountData,\r\n      loadHandler,\r\n      updatePolicies,\r\n      updateRegistrationType,\r\n      updateformOne\r\n    );\r\n\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  async processData(\r\n    updateAccountData,\r\n    loadHandler,\r\n    updatePolicies,\r\n    updateRegistrationType,\r\n    updateformOne\r\n  ) {\r\n    const res1 = await this.getCustomerPolicy(\r\n      updateAccountData,\r\n      loadHandler,\r\n      updatePolicies,\r\n      updateRegistrationType\r\n    );\r\n\r\n    const res2 = await this.getCertificate(updateAccountData, loadHandler);\r\n\r\n    const res3 = await this.getCustomerDetail(\r\n      loadHandler,\r\n      updateformOne,\r\n      updateAccountData\r\n    );\r\n\r\n    const res4 = await this.getAccountPoint(updateAccountData, loadHandler);\r\n\r\n    if (res1 !== true && res2 !== true && res3 !== true && res4 !== true) {\r\n      this.failCase(updateAccountData, loadHandler);\r\n    } else {\r\n      loadHandler(false);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  async getCustomerPolicy(\r\n    updateAccountData,\r\n    loadHandler,\r\n    updatePolicies,\r\n    updateRegistrationType\r\n  ) {\r\n    const accountData = this.props.states.simedis_account;\r\n    try {\r\n      const url =\r\n        \"https://cors-anywhere.herokuapp.com/https://sit-eli.myequity.id/policy\";\r\n      const data = {\r\n        emailAddress: accountData.username,\r\n        // emailAddress: \"revanza-27@yopmail.com\",\r\n      };\r\n      const config = {\r\n        headers: {\r\n          Authorization: accountData.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.post(url, data, config);\r\n      console.log(res);\r\n      if (!res.data.ok) {\r\n        this.failCase(updateAccountData, loadHandler);\r\n      }\r\n      const customerPolicy = res.data.data.customerPolicy;\r\n      const registrationType = res.data.data.registrationType;\r\n\r\n      updateAccountData(\"customer_code\", customerPolicy.customerCode);\r\n      updatePolicies(customerPolicy);\r\n      updateRegistrationType(registrationType);\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async getCertificate(updateAccountData, loadHandler) {\r\n    try {\r\n      const accountData = this.props.states.simedis_account;\r\n      const url =\r\n        \"https://cors-anywhere.herokuapp.com/https://sit-eli.myequity.id/get-certificate\";\r\n      const data = {\r\n        customerCode: accountData.customer_code,\r\n      };\r\n      const config = {\r\n        headers: {\r\n          Authorization: accountData.token,\r\n        },\r\n      };\r\n      const res = await axios.post(url, data, config);\r\n      console.log(res);\r\n      if (!res.data.ok) {\r\n        this.failCase(updateAccountData, loadHandler);\r\n      }\r\n      updateAccountData(\"base64\", res.data.data.data.certificate);\r\n      return true;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async getCustomerDetail(loadHandler, updateformOne, updateAccountData) {\r\n    try {\r\n      const accountData = this.props.states.simedis_account;\r\n      const url =\r\n        \"https://cors-anywhere.herokuapp.com/https://sit-eli.myequity.id/customers/\" +\r\n        accountData.customer_code;\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: accountData.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.get(url, config);\r\n      if (!res.data.ok) {\r\n        this.failCase(updateAccountData, loadHandler);\r\n      }\r\n      console.log(res);\r\n      const dataCustomer = await res.data.data;\r\n      updateformOne(\"first_name\", dataCustomer.customerName);\r\n      updateformOne(\"birth_date\", dataCustomer.dateOfBirth);\r\n      updateformOne(\"gender\", dataCustomer.genderCode);\r\n      updateformOne(\"email\", dataCustomer.emailAddress);\r\n      updateformOne(\"phone_number\", dataCustomer.phoneNo);\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getAccountPoint(updateAccountData, loadHandler) {\r\n    try {\r\n      const accountData = this.props.states.simedis_account;\r\n      const data = {\r\n        emailAddress: accountData.username,\r\n        // emailAddress: \"revanza-27@yopmail.com\",\r\n      };\r\n      const url =\r\n        \"https://cors-anywhere.herokuapp.com/https://sit-eli.myequity.id/account-point\";\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: accountData.token,\r\n        },\r\n      };\r\n\r\n      const res = await axios.post(url, data, config);\r\n\r\n      console.log(res);\r\n      if (!res.data.ok) {\r\n        this.failCase(updateAccountData, loadHandler);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  failCase(updateAccountData, loadHandler) {\r\n    loadHandler(false);\r\n    updateAccountData(\"is_valid\", false);\r\n    updateAccountData(\r\n      \"form_status\",\r\n      \"Mohon maaf koneksi mengalami kendala, silahkan coba lagi\"\r\n    );\r\n\r\n    this.props.history.push(\"/login\");\r\n  }\r\n\r\n  handleMenuClick() {\r\n    this.setState({ toggle: !this.state.toggle });\r\n  }\r\n\r\n  handleLogout() {\r\n    this.props.history.push(\"/login\");\r\n  }\r\n\r\n  render() {\r\n    const { states } = this.props;\r\n\r\n    // if (!states || states.is_loading === true) {\r\n    //   return (\r\n    //     <div className=\"main-dashboard-loading\">\r\n    //       <Container className=\"dashboard-loading-container-0\" fluid>\r\n    //         <Row>\r\n    //           <Loader />\r\n    //         </Row>\r\n    //       </Container>\r\n    //     </div>\r\n    //   );\r\n    // }\r\n\r\n    let toggled;\r\n    let mobileMenu;\r\n    if (this.state.width <= \"992\") {\r\n      mobileMenu = (\r\n        <Container className=\"dash-burger-menu\">\r\n          <a onClick={(e) => this.handleMenuClick()}>\r\n            <Image src={Menu} />\r\n          </a>\r\n        </Container>\r\n      );\r\n\r\n      if (this.state.toggle) {\r\n        toggled = \"toggled\";\r\n      } else {\r\n        toggled = \"not-toggled\";\r\n      }\r\n    } else {\r\n      mobileMenu = null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"main-dashboard\">\r\n        <Tab.Container defaultActiveKey=\"policy\">\r\n          <Row>\r\n            <Sidebar\r\n              data={states.form_1}\r\n              width={this.state.width}\r\n              toggled={toggled}\r\n              handleExitSidebar={this.handleMenuClick}\r\n              handleLogout={this.handleLogout}\r\n            />\r\n            <Col className={`dashboard-content ${toggled}`}>\r\n              <Navuser data={states.form_1} />\r\n              {mobileMenu}\r\n              <Tab.Content className=\"dashboard-tab-content\">\r\n                <Tab.Pane className=\"dashboard-tab-pane\" eventKey=\"profile\">\r\n                  <CustomerView data={states.form_1} />\r\n                </Tab.Pane>\r\n                <Tab.Pane className=\"dashboard-tab-pane\" eventKey=\"policy\">\r\n                  <PolicyView\r\n                    data={states.policies}\r\n                    reg={states.registration_type}\r\n                    certificate={states.simedis_account.base64}\r\n                  />\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n              <Footer />\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}