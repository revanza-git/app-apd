{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\app-apd\\\\src\\\\Components\\\\Selects\\\\Relationship\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Form, Col, Row, Card } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\nimport \"./index.scss\";\n\nclass Selects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fieldStyleHandler = Display => {\n      if (!Display) {\n        return \"hide\";\n      }\n    };\n\n    this.selectedStyleHandler = id => {\n      for (const i of this.props.BlockChoices) {\n        if (id === i) {\n          return \"hide\";\n        }\n      }\n    };\n\n    this.handler = (StateKey, HandleChange, event) => {\n      HandleChange(StateKey, event);\n      this.setState({\n        id: event\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const StoreData = this.props.Data; // console.log(this.props.BlockChoices);\n    // const filtered = StoreData.filter((i) => {\n    //   return i.relationshipCode !== \"0\";\n    // });\n    // this.setState([filtered]);\n  }\n\n  render() {\n    const {\n      labelCol,\n      labelVal,\n      TextCol,\n      StateKey,\n      HandleChange,\n      Data,\n      Display,\n      BlockChoices\n    } = this.props; // const LocalStates = this.state[0];\n    // if (LocalStates === undefined) {\n    //   return (\n    //     <Card>\n    //       <Card.Header>Loading</Card.Header>\n    //       <Card.Body>\n    //         <Loader\n    //           style={{\n    //             width: \"100%\",\n    //             height: \"100\",\n    //             display: \"flex\",\n    //             justifyContent: \"center\",\n    //             alignItems: \"center\",\n    //           }}\n    //           type=\"ThreeDots\"\n    //           color=\"#2BAD60\"\n    //           height=\"100\"\n    //           width=\"100\"\n    //         />\n    //       </Card.Body>\n    //     </Card>\n    //   );\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.fieldStyleHandler(Display),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      column: true,\n      sm: labelCol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, labelVal), /*#__PURE__*/React.createElement(Col, {\n      sm: TextCol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Pilih...\",\n      as: \"select\",\n      onChange: event => this.handler(StateKey, HandleChange, event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, \"Pilih...\"), Data.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      key: item.relationshipCode,\n      id: item.relationshipCode,\n      value: item.relationshipCode,\n      className: this.selectedStyleHandler(item.relationshipCode),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, item.relationshipDesc))))));\n  }\n\n}\n\nexport default Selects;","map":{"version":3,"sources":["D:/project/app-apd/src/Components/Selects/Relationship/index.js"],"names":["React","Component","Form","Col","Row","Card","Loader","Selects","constructor","props","fieldStyleHandler","Display","selectedStyleHandler","id","i","BlockChoices","handler","StateKey","HandleChange","event","setState","state","componentDidMount","StoreData","Data","render","labelCol","labelVal","TextCol","target","value","map","item","relationshipCode","relationshipDesc"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Col, Row, Card } from \"react-bootstrap\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./index.scss\";\r\n\r\nclass Selects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    const StoreData = this.props.Data;\r\n    // console.log(this.props.BlockChoices);\r\n    // const filtered = StoreData.filter((i) => {\r\n    //   return i.relationshipCode !== \"0\";\r\n    // });\r\n    // this.setState([filtered]);\r\n  }\r\n\r\n  fieldStyleHandler = (Display) => {\r\n    if (!Display) {\r\n      return \"hide\";\r\n    }\r\n  };\r\n\r\n  selectedStyleHandler = (id) => {\r\n    for (const i of this.props.BlockChoices) {\r\n      if (id === i) {\r\n        return \"hide\";\r\n      }\r\n    }\r\n  };\r\n\r\n  handler = (StateKey, HandleChange, event) => {\r\n    HandleChange(StateKey, event);\r\n    this.setState({ id: event });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      labelCol,\r\n      labelVal,\r\n      TextCol,\r\n      StateKey,\r\n      HandleChange,\r\n      Data,\r\n      Display,\r\n      BlockChoices,\r\n    } = this.props;\r\n\r\n    // const LocalStates = this.state[0];\r\n\r\n    // if (LocalStates === undefined) {\r\n    //   return (\r\n    //     <Card>\r\n    //       <Card.Header>Loading</Card.Header>\r\n    //       <Card.Body>\r\n    //         <Loader\r\n    //           style={{\r\n    //             width: \"100%\",\r\n    //             height: \"100\",\r\n    //             display: \"flex\",\r\n    //             justifyContent: \"center\",\r\n    //             alignItems: \"center\",\r\n    //           }}\r\n    //           type=\"ThreeDots\"\r\n    //           color=\"#2BAD60\"\r\n    //           height=\"100\"\r\n    //           width=\"100\"\r\n    //         />\r\n    //       </Card.Body>\r\n    //     </Card>\r\n    //   );\r\n    // }\r\n\r\n    return (\r\n      <div className={this.fieldStyleHandler(Display)}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={labelCol}>\r\n            {labelVal}\r\n          </Form.Label>\r\n          <Col sm={TextCol}>\r\n            <Form.Control\r\n              placeholder=\"Pilih...\"\r\n              as=\"select\"\r\n              onChange={(event) =>\r\n                this.handler(StateKey, HandleChange, event.target.value)\r\n              }\r\n            >\r\n              <option value=\"\">Pilih...</option>\r\n              {Data.map((item) => (\r\n                <option\r\n                  key={item.relationshipCode}\r\n                  id={item.relationshipCode}\r\n                  value={item.relationshipCode}\r\n                  className={this.selectedStyleHandler(item.relationshipCode)}\r\n                >\r\n                  {item.relationshipDesc}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Selects;\r\n"]},"metadata":{},"sourceType":"module"}