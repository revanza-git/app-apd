{"ast":null,"code":"import _createForOfIteratorHelper from\"D:\\\\project\\\\app-apd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"D:\\\\project\\\\app-apd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\project\\\\app-apd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\project\\\\app-apd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\project\\\\app-apd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{Form,Col,Row,Card}from\"react-bootstrap\";import Loader from\"react-loader-spinner\";import\"./index.scss\";var Selects=/*#__PURE__*/function(_Component){_inherits(Selects,_Component);var _super=_createSuper(Selects);function Selects(props){var _this;_classCallCheck(this,Selects);_this=_super.call(this,props);_this.fieldStyleHandler=function(Display){if(!Display){return\"hide\";}};_this.selectedStyleHandler=function(id){var _iterator=_createForOfIteratorHelper(_this.props.BlockChoices),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var i=_step.value;if(id===i){return\"hide\";}}}catch(err){_iterator.e(err);}finally{_iterator.f();}};_this.handler=function(StateKey,HandleChange,event){HandleChange(StateKey,event);_this.setState({id:event});};_this.state={};return _this;}_createClass(Selects,[{key:\"componentDidMount\",value:function componentDidMount(){var StoreData=this.props.Data;// console.log(this.props.BlockChoices);\n// const filtered = StoreData.filter((i) => {\n//   return i.relationshipCode !== \"0\";\n// });\n// this.setState([filtered]);\n}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,labelCol=_this$props.labelCol,labelVal=_this$props.labelVal,TextCol=_this$props.TextCol,StateKey=_this$props.StateKey,HandleChange=_this$props.HandleChange,Data=_this$props.Data,Display=_this$props.Display,BlockChoices=_this$props.BlockChoices;// const LocalStates = this.state[0];\n// if (LocalStates === undefined) {\n//   return (\n//     <Card>\n//       <Card.Header>Loading</Card.Header>\n//       <Card.Body>\n//         <Loader\n//           style={{\n//             width: \"100%\",\n//             height: \"100\",\n//             display: \"flex\",\n//             justifyContent: \"center\",\n//             alignItems: \"center\",\n//           }}\n//           type=\"ThreeDots\"\n//           color=\"#2BAD60\"\n//           height=\"100\"\n//           width=\"100\"\n//         />\n//       </Card.Body>\n//     </Card>\n//   );\n// }\nreturn/*#__PURE__*/React.createElement(\"div\",{className:this.fieldStyleHandler(Display)},/*#__PURE__*/React.createElement(Form.Group,{as:Row},/*#__PURE__*/React.createElement(Form.Label,{column:true,sm:labelCol},labelVal),/*#__PURE__*/React.createElement(Col,{sm:TextCol},/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"Pilih...\",as:\"select\",onChange:function onChange(event){return _this2.handler(StateKey,HandleChange,event.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Pilih...\"),Data.map(function(item){return/*#__PURE__*/React.createElement(\"option\",{key:item.relationshipCode,id:item.relationshipCode,value:item.relationshipCode,className:_this2.selectedStyleHandler(item.relationshipCode)},item.relationshipDesc);})))));}}]);return Selects;}(Component);export default Selects;","map":{"version":3,"sources":["D:/project/app-apd/src/Components/Selects/Relationship/index.js"],"names":["React","Component","Form","Col","Row","Card","Loader","Selects","props","fieldStyleHandler","Display","selectedStyleHandler","id","BlockChoices","i","handler","StateKey","HandleChange","event","setState","state","StoreData","Data","labelCol","labelVal","TextCol","target","value","map","item","relationshipCode","relationshipDesc"],"mappings":"wtBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,GAApB,CAAyBC,IAAzB,KAAqC,iBAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAO,cAAP,C,GAEMC,CAAAA,O,kGACJ,iBAAYC,KAAZ,CAAmB,yCACjB,uBAAMA,KAAN,EADiB,MAenBC,iBAfmB,CAeC,SAACC,OAAD,CAAa,CAC/B,GAAI,CAACA,OAAL,CAAc,CACZ,MAAO,MAAP,CACD,CACF,CAnBkB,OAqBnBC,oBArBmB,CAqBI,SAACC,EAAD,CAAQ,0CACb,MAAKJ,KAAL,CAAWK,YADE,YAC7B,+CAAyC,IAA9BC,CAAAA,CAA8B,aACvC,GAAIF,EAAE,GAAKE,CAAX,CAAc,CACZ,MAAO,MAAP,CACD,CACF,CAL4B,qDAM9B,CA3BkB,OA6BnBC,OA7BmB,CA6BT,SAACC,QAAD,CAAWC,YAAX,CAAyBC,KAAzB,CAAmC,CAC3CD,YAAY,CAACD,QAAD,CAAWE,KAAX,CAAZ,CACA,MAAKC,QAAL,CAAc,CAAEP,EAAE,CAAEM,KAAN,CAAd,EACD,CAhCkB,CAGjB,MAAKE,KAAL,CAAa,EAAb,CAHiB,aAIlB,C,iFAEmB,CAClB,GAAMC,CAAAA,SAAS,CAAG,KAAKb,KAAL,CAAWc,IAA7B,CACA;AACA;AACA;AACA;AACA;AACD,C,uCAqBQ,iCAUH,KAAKd,KAVF,CAELe,QAFK,aAELA,QAFK,CAGLC,QAHK,aAGLA,QAHK,CAILC,OAJK,aAILA,OAJK,CAKLT,QALK,aAKLA,QALK,CAMLC,YANK,aAMLA,YANK,CAOLK,IAPK,aAOLA,IAPK,CAQLZ,OARK,aAQLA,OARK,CASLG,YATK,aASLA,YATK,CAYP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,2BAAK,SAAS,CAAE,KAAKJ,iBAAL,CAAuBC,OAAvB,CAAhB,eACE,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAEN,GAAhB,eACE,oBAAC,IAAD,CAAM,KAAN,EAAY,MAAM,KAAlB,CAAmB,EAAE,CAAEmB,QAAvB,EACGC,QADH,CADF,cAIE,oBAAC,GAAD,EAAK,EAAE,CAAEC,OAAT,eACE,oBAAC,IAAD,CAAM,OAAN,EACE,WAAW,CAAC,UADd,CAEE,EAAE,CAAC,QAFL,CAGE,QAAQ,CAAE,kBAACP,KAAD,QACR,CAAA,MAAI,CAACH,OAAL,CAAaC,QAAb,CAAuBC,YAAvB,CAAqCC,KAAK,CAACQ,MAAN,CAAaC,KAAlD,CADQ,EAHZ,eAOE,8BAAQ,KAAK,CAAC,EAAd,aAPF,CAQGL,IAAI,CAACM,GAAL,CAAS,SAACC,IAAD,qBACR,8BACE,GAAG,CAAEA,IAAI,CAACC,gBADZ,CAEE,EAAE,CAAED,IAAI,CAACC,gBAFX,CAGE,KAAK,CAAED,IAAI,CAACC,gBAHd,CAIE,SAAS,CAAE,MAAI,CAACnB,oBAAL,CAA0BkB,IAAI,CAACC,gBAA/B,CAJb,EAMGD,IAAI,CAACE,gBANR,CADQ,EAAT,CARH,CADF,CAJF,CADF,CADF,CA8BD,C,qBAtGmB9B,S,EAyGtB,cAAeM,CAAAA,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Col, Row, Card } from \"react-bootstrap\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./index.scss\";\r\n\r\nclass Selects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    const StoreData = this.props.Data;\r\n    // console.log(this.props.BlockChoices);\r\n    // const filtered = StoreData.filter((i) => {\r\n    //   return i.relationshipCode !== \"0\";\r\n    // });\r\n    // this.setState([filtered]);\r\n  }\r\n\r\n  fieldStyleHandler = (Display) => {\r\n    if (!Display) {\r\n      return \"hide\";\r\n    }\r\n  };\r\n\r\n  selectedStyleHandler = (id) => {\r\n    for (const i of this.props.BlockChoices) {\r\n      if (id === i) {\r\n        return \"hide\";\r\n      }\r\n    }\r\n  };\r\n\r\n  handler = (StateKey, HandleChange, event) => {\r\n    HandleChange(StateKey, event);\r\n    this.setState({ id: event });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      labelCol,\r\n      labelVal,\r\n      TextCol,\r\n      StateKey,\r\n      HandleChange,\r\n      Data,\r\n      Display,\r\n      BlockChoices,\r\n    } = this.props;\r\n\r\n    // const LocalStates = this.state[0];\r\n\r\n    // if (LocalStates === undefined) {\r\n    //   return (\r\n    //     <Card>\r\n    //       <Card.Header>Loading</Card.Header>\r\n    //       <Card.Body>\r\n    //         <Loader\r\n    //           style={{\r\n    //             width: \"100%\",\r\n    //             height: \"100\",\r\n    //             display: \"flex\",\r\n    //             justifyContent: \"center\",\r\n    //             alignItems: \"center\",\r\n    //           }}\r\n    //           type=\"ThreeDots\"\r\n    //           color=\"#2BAD60\"\r\n    //           height=\"100\"\r\n    //           width=\"100\"\r\n    //         />\r\n    //       </Card.Body>\r\n    //     </Card>\r\n    //   );\r\n    // }\r\n\r\n    return (\r\n      <div className={this.fieldStyleHandler(Display)}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={labelCol}>\r\n            {labelVal}\r\n          </Form.Label>\r\n          <Col sm={TextCol}>\r\n            <Form.Control\r\n              placeholder=\"Pilih...\"\r\n              as=\"select\"\r\n              onChange={(event) =>\r\n                this.handler(StateKey, HandleChange, event.target.value)\r\n              }\r\n            >\r\n              <option value=\"\">Pilih...</option>\r\n              {Data.map((item) => (\r\n                <option\r\n                  key={item.relationshipCode}\r\n                  id={item.relationshipCode}\r\n                  value={item.relationshipCode}\r\n                  className={this.selectedStyleHandler(item.relationshipCode)}\r\n                >\r\n                  {item.relationshipDesc}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Selects;\r\n"]},"metadata":{},"sourceType":"module"}