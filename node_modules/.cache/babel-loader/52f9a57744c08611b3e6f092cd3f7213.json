{"ast":null,"code":"import * as constants from \"./constants\";\nimport axios from \"axios\";\nexport const formOne = (fieldName, fieldValue) => ({\n  type: constants.FORM_ONE,\n  fieldName,\n  fieldValue\n});\nexport const formTwo = (fieldName, fieldValue) => ({\n  type: constants.FORM_TWO,\n  fieldName,\n  fieldValue\n});\nexport const simedisChange = (fieldName, fieldValue) => ({\n  type: constants.SIMEDIS_CHANGE,\n  fieldName,\n  fieldValue\n});\nexport const simedisAccountChange = (fieldName, fieldValue) => ({\n  type: constants.SIMEDIS_ACCOUNT,\n  fieldName,\n  fieldValue\n});\nexport const updateFormValidation = fieldValue => ({\n  type: constants.VALIDATION,\n  fieldValue\n});\nexport const updatePageLoad = fieldValue => ({\n  type: constants.PAGE_LOAD,\n  fieldValue\n});\nexport const updateFormType = fieldValue => ({\n  type: constants.FORM_TYPE,\n  fieldValue\n});\nexport const updateRegType = fieldValue => ({\n  type: constants.REG_TYPE,\n  fieldValue\n});\nexport const updateGender = payload => ({\n  type: constants.GENDER,\n  payload\n});\nexport const updateRelationship = payload => ({\n  type: constants.RELATIONSHIP,\n  payload\n});\nexport const updatePolicies = payload => ({\n  type: constants.POLICIES,\n  payload\n});\nexport const updateRegistrationType = payload => ({\n  type: constants.REGISTRATION_TYPE,\n  payload\n}); // export function\n\nexport const postApi = (url, data, config) => {\n  return () => {\n    const res = axios.post(url, data, config).then(response => {\n      return response;\n    }).catch(function (error) {\n      return error;\n    });\n    return res;\n  };\n};","map":{"version":3,"sources":["D:/project/app-apd/src/Store/Form/actions.js"],"names":["constants","axios","formOne","fieldName","fieldValue","type","FORM_ONE","formTwo","FORM_TWO","simedisChange","SIMEDIS_CHANGE","simedisAccountChange","SIMEDIS_ACCOUNT","updateFormValidation","VALIDATION","updatePageLoad","PAGE_LOAD","updateFormType","FORM_TYPE","updateRegType","REG_TYPE","updateGender","payload","GENDER","updateRelationship","RELATIONSHIP","updatePolicies","POLICIES","updateRegistrationType","REGISTRATION_TYPE","postApi","url","data","config","res","post","then","response","catch","error"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,SAAD,EAAYC,UAAZ,MAA4B;AACjDC,EAAAA,IAAI,EAAEL,SAAS,CAACM,QADiC;AAEjDH,EAAAA,SAFiD;AAGjDC,EAAAA;AAHiD,CAA5B,CAAhB;AAMP,OAAO,MAAMG,OAAO,GAAG,CAACJ,SAAD,EAAYC,UAAZ,MAA4B;AACjDC,EAAAA,IAAI,EAAEL,SAAS,CAACQ,QADiC;AAEjDL,EAAAA,SAFiD;AAGjDC,EAAAA;AAHiD,CAA5B,CAAhB;AAMP,OAAO,MAAMK,aAAa,GAAG,CAACN,SAAD,EAAYC,UAAZ,MAA4B;AACvDC,EAAAA,IAAI,EAAEL,SAAS,CAACU,cADuC;AAEvDP,EAAAA,SAFuD;AAGvDC,EAAAA;AAHuD,CAA5B,CAAtB;AAMP,OAAO,MAAMO,oBAAoB,GAAG,CAACR,SAAD,EAAYC,UAAZ,MAA4B;AAC9DC,EAAAA,IAAI,EAAEL,SAAS,CAACY,eAD8C;AAE9DT,EAAAA,SAF8D;AAG9DC,EAAAA;AAH8D,CAA5B,CAA7B;AAMP,OAAO,MAAMS,oBAAoB,GAAIT,UAAD,KAAiB;AACnDC,EAAAA,IAAI,EAAEL,SAAS,CAACc,UADmC;AAEnDV,EAAAA;AAFmD,CAAjB,CAA7B;AAKP,OAAO,MAAMW,cAAc,GAAIX,UAAD,KAAiB;AAC7CC,EAAAA,IAAI,EAAEL,SAAS,CAACgB,SAD6B;AAE7CZ,EAAAA;AAF6C,CAAjB,CAAvB;AAKP,OAAO,MAAMa,cAAc,GAAIb,UAAD,KAAiB;AAC7CC,EAAAA,IAAI,EAAEL,SAAS,CAACkB,SAD6B;AAE7Cd,EAAAA;AAF6C,CAAjB,CAAvB;AAKP,OAAO,MAAMe,aAAa,GAAIf,UAAD,KAAiB;AAC5CC,EAAAA,IAAI,EAAEL,SAAS,CAACoB,QAD4B;AAE5ChB,EAAAA;AAF4C,CAAjB,CAAtB;AAKP,OAAO,MAAMiB,YAAY,GAAIC,OAAD,KAAc;AACxCjB,EAAAA,IAAI,EAAEL,SAAS,CAACuB,MADwB;AAExCD,EAAAA;AAFwC,CAAd,CAArB;AAKP,OAAO,MAAME,kBAAkB,GAAIF,OAAD,KAAc;AAC9CjB,EAAAA,IAAI,EAAEL,SAAS,CAACyB,YAD8B;AAE9CH,EAAAA;AAF8C,CAAd,CAA3B;AAKP,OAAO,MAAMI,cAAc,GAAIJ,OAAD,KAAc;AAC1CjB,EAAAA,IAAI,EAAEL,SAAS,CAAC2B,QAD0B;AAE1CL,EAAAA;AAF0C,CAAd,CAAvB;AAKP,OAAO,MAAMM,sBAAsB,GAAIN,OAAD,KAAc;AAClDjB,EAAAA,IAAI,EAAEL,SAAS,CAAC6B,iBADkC;AAElDP,EAAAA;AAFkD,CAAd,CAA/B,C,CAKP;;AACA,OAAO,MAAMQ,OAAO,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,MAAZ,KAAuB;AAC5C,SAAO,MAAM;AACX,UAAMC,GAAG,GAAGjC,KAAK,CACdkC,IADS,CACJJ,GADI,EACCC,IADD,EACOC,MADP,EAETG,IAFS,CAEHC,QAAD,IAAc;AAClB,aAAOA,QAAP;AACD,KAJS,EAKTC,KALS,CAKH,UAAUC,KAAV,EAAiB;AACtB,aAAOA,KAAP;AACD,KAPS,CAAZ;AAQA,WAAOL,GAAP;AACD,GAVD;AAWD,CAZM","sourcesContent":["import * as constants from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const formOne = (fieldName, fieldValue) => ({\r\n  type: constants.FORM_ONE,\r\n  fieldName,\r\n  fieldValue,\r\n});\r\n\r\nexport const formTwo = (fieldName, fieldValue) => ({\r\n  type: constants.FORM_TWO,\r\n  fieldName,\r\n  fieldValue,\r\n});\r\n\r\nexport const simedisChange = (fieldName, fieldValue) => ({\r\n  type: constants.SIMEDIS_CHANGE,\r\n  fieldName,\r\n  fieldValue,\r\n});\r\n\r\nexport const simedisAccountChange = (fieldName, fieldValue) => ({\r\n  type: constants.SIMEDIS_ACCOUNT,\r\n  fieldName,\r\n  fieldValue,\r\n});\r\n\r\nexport const updateFormValidation = (fieldValue) => ({\r\n  type: constants.VALIDATION,\r\n  fieldValue,\r\n});\r\n\r\nexport const updatePageLoad = (fieldValue) => ({\r\n  type: constants.PAGE_LOAD,\r\n  fieldValue,\r\n});\r\n\r\nexport const updateFormType = (fieldValue) => ({\r\n  type: constants.FORM_TYPE,\r\n  fieldValue,\r\n});\r\n\r\nexport const updateRegType = (fieldValue) => ({\r\n  type: constants.REG_TYPE,\r\n  fieldValue,\r\n});\r\n\r\nexport const updateGender = (payload) => ({\r\n  type: constants.GENDER,\r\n  payload,\r\n});\r\n\r\nexport const updateRelationship = (payload) => ({\r\n  type: constants.RELATIONSHIP,\r\n  payload,\r\n});\r\n\r\nexport const updatePolicies = (payload) => ({\r\n  type: constants.POLICIES,\r\n  payload,\r\n});\r\n\r\nexport const updateRegistrationType = (payload) => ({\r\n  type: constants.REGISTRATION_TYPE,\r\n  payload,\r\n});\r\n\r\n// export function\r\nexport const postApi = (url, data, config) => {\r\n  return () => {\r\n    const res = axios\r\n      .post(url, data, config)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n    return res;\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}